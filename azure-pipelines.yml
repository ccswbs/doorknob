# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

schedules:
- cron: "0 4 * * *"
  displayName: Daily midnight EST build (4am UTC)
  branches:
    include:
    - main
  always: true
- cron: "0 10,16 * * *"
  displayName: Twice a day build (6am and 12pm EST / 10am and 4pm UTC )
  branches:
    include:
    - main
  always: true

variables:
- group: ug-doorknob
- name: _path_prefix
  value: '$(PathPrefix)'
- name: _gatsby_cache_folder
  value: '.cache'
- name: _gatsby_public_folder
  value: 'public'

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: npm install
  displayName: 'npm install'

- task: Cache@2
  inputs:
    key: 'gatsby_cache | "$(Agent.OS)" | "$(Build.SourceBranch)" | "$(_path_prefix)"'
    path: $(_gatsby_cache_folder)
  displayName: 'Retrieve cached Gatsby .cache folder'

- task: Cache@2
  inputs:
    key: 'gatsby_public | "$(Agent.OS)" | "$(Build.SourceBranch)" | "$(_path_prefix)"'
    path: $(_gatsby_public_folder)
  displayName: 'Retrieve cached Gatsby public folder'

- script: npm run build-prefix
  displayName: 'Build gatsby in sub-directory'
  condition: eq(variables._path_prefix, 'true')

- script: npm run build
  displayName: 'Build gatsby'
  condition: ne(variables._path_prefix, 'true')

- script: |
    echo $(variables.PATH_PREFIX_URL)
    cd $(Build.SourcesDirectory)/public/$(variables.PATH_PREFIX_URL)/_gatsby/
    mv image $(Build.SourcesDirectory)/public/_gatsby/
  displayName: 'Fix images in extra sub-directory'
  condition: eq(variables._path_prefix, 'true')

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/public'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
